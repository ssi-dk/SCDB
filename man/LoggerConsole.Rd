% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Logger.R
\name{LoggerConsole}
\alias{LoggerConsole}
\title{LoggerConsole: Simple logging to console}
\value{
A new instance of the \code{LoggerConsole} \link[R6:R6Class]{R6} class.
}
\description{
The \code{LoggerConsole} class is a simple logger that writes log messages to the console.
Logging is flexible and can take any message given.
}
\examples{
  logger <- LoggerConsole$new()

  logger$log_info("This is an info message")
  try(logger$log_warn("This is a warning!"))
  try(logger$log_error("This is an error!"))
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{start_time}}{(\code{POSIXct(1)})\cr
The time at which data processing was started. Read only.}

\item{\code{output_to_console}}{(\code{logical(1)})\cr
Should the Logger output to console? Read only.
This can always be overridden by Logger$log_info(..., output_to_console = FALSE).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LoggerConsole-new}{\code{LoggerConsole$new()}}
\item \href{#method-LoggerConsole-log_info}{\code{LoggerConsole$log_info()}}
\item \href{#method-LoggerConsole-log_warn}{\code{LoggerConsole$log_warn()}}
\item \href{#method-LoggerConsole-log_error}{\code{LoggerConsole$log_error()}}
\item \href{#method-LoggerConsole-clone}{\code{LoggerConsole$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoggerConsole-new"></a>}}
\if{latex}{\out{\hypertarget{method-LoggerConsole-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{LoggerConsole} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoggerConsole$new(
  start_time = Sys.time(),
  output_to_console = TRUE,
  warn = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start_time}}{(\code{POSIXct(1)})\cr
The time at which data processing was started (defaults to \code{\link[=Sys.time]{Sys.time()}}).}

\item{\code{output_to_console}}{(\code{logical(1)})\cr
Should the Logger output to console?}

\item{\code{warn}}{(\code{logical(1)})\cr
Should a warning be produced if no logging will be done?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoggerConsole-log_info"></a>}}
\if{latex}{\out{\hypertarget{method-LoggerConsole-log_info}{}}}
\subsection{Method \code{log_info()}}{
Write a line to log.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoggerConsole$log_info(
  ...,
  tic = Sys.time(),
  output_to_console = self$output_to_console,
  log_type = "INFO",
  timestamp_format = getOption("SCDB.log_timestamp_format", "\%F \%R:\%OS3")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{One or more character strings to be concatenated}

\item{\code{tic}}{(\code{POSIXct(1)})\cr
The timestamp used by the log entry.}

\item{\code{output_to_console}}{(\code{logical(1)})\cr
Should the line be written to console?}

\item{\code{log_type}}{A character string which describes the severity of the log message}

\item{\code{timestamp_format}}{(\code{character(1)})\cr
The format of the timestamp used in the log message (parsable by \code{\link[=strftime]{strftime()}}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the log message invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoggerConsole-log_warn"></a>}}
\if{latex}{\out{\hypertarget{method-LoggerConsole-log_warn}{}}}
\subsection{Method \code{log_warn()}}{
Write a warning to log file and generate warning.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoggerConsole$log_warn(..., log_type = "WARNING")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{One or more character strings to be concatenated}

\item{\code{log_type}}{A character string which describes the severity of the log message}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoggerConsole-log_error"></a>}}
\if{latex}{\out{\hypertarget{method-LoggerConsole-log_error}{}}}
\subsection{Method \code{log_error()}}{
Write an error to log file and stop execution.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoggerConsole$log_error(..., log_type = "ERROR")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{One or more character strings to be concatenated}

\item{\code{log_type}}{A character string which describes the severity of the log message}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoggerConsole-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LoggerConsole-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoggerConsole$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
